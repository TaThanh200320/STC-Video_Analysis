let grid,currentLayout={rows:2,cols:2,totalCells:4},gridCells=[];function initializeGrid(){grid&&grid.destroy(!1);const t=Math.floor(12/currentLayout.cols);return grid=GridStack.init({column:12,maxRow:currentLayout.rows,cellHeight:"300px",float:!0,disableResize:!0,disableDrag:!1,staticGrid:!1}),createEmptyCells(),grid}function createEmptyCells(){grid.removeAll(),gridCells=[];for(let t=0;t<currentLayout.totalCells;t++){const e=Math.floor(t/currentLayout.cols),n=t%currentLayout.cols,r=Math.floor(12/currentLayout.cols),l=createEmptyCell(t);grid.makeWidget(l,{x:n*r,y:e,w:r,h:1,autoPosition:!1,noResize:!0,noMove:!1}),gridCells.push({index:t,cameraId:null,element:l})}}function createEmptyCell(t){const e=document.createElement("div");return e.className="grid-stack-item",e.setAttribute("data-cell-type","empty"),e.setAttribute("data-cell-index",t),e.innerHTML=`<div class="grid-stack-item-content bg-gray-100 rounded-lg flex items-center justify-center"><span class="text-gray-500">Camera Slot ${t+1}</span></div>`,e}function createCameraCell(t){const e=document.createElement("div");e.className="grid-stack-item";const n=`canvas-${t.id}`;return e.setAttribute("gs-id",n),e.setAttribute("data-cell-type","camera"),e.setAttribute("data-camera-id",t.id),e.innerHTML=`<div class="grid-stack-item-content relative"><canvas class="w-full h-full" id="${n}"></canvas></div>`,e}function changeLayout(t){const[e,n]=t.split("x").map(Number);currentLayout={rows:e,cols:n,totalCells:e*n},initializeGrid(),saveLayout()}async function loadCameras(t){try{const e=await fetch(`/dashboard/cameras?locationId=${t}`);if(!e.ok)throw Error(`HTTP error! status: ${e.status}`);const n=await e.json(),r=document.getElementById(`cameras-${t}`);r.innerHTML=n.map(t=>`<div class="camera-item cursor-pointer p-2 hover:bg-gray-100" onclick="assignCameraToNextCell(${JSON.stringify(t).replace(/"/g,"&quot;")})" data-camera-id="${t.id}"><i class="fas fa-video"></i> ${t.ten}</div>`).join(""),r.style.display="block"}catch(t){console.error("Error loading cameras:",t)}}function assignCameraToNextCell(t){const e=gridCells.find(t=>!t.cameraId);if(!e)return void alert("No empty cells available");const n=Math.floor(e.index/currentLayout.cols),r=e.index%currentLayout.cols,l=Math.floor(12/currentLayout.cols);grid.removeWidget(e.element);const a=createCameraCell(t,e.index);grid.makeWidget(a,{x:r*l,y:n,w:l,h:1,autoPosition:!1,noResize:!0,noMove:!1}),e.cameraId=t.id,e.element=a,initializeStream(t.id),saveLayout()}function initializeStream(t){loadPlayer({url:`ws://${window.location.hostname}:3000/api/stream/${t}`,canvas:document.getElementById(`canvas-${t}`)})}function toggleArea(t){const e=t.nextElementSibling;e.style.display="none"===e.style.display?"block":"none"}function togglePosition(t){document.querySelectorAll(".location-item").forEach(t=>{t.classList.remove("active")}),t.classList.add("active");const e=t.nextElementSibling;e.style.display="none"===e.style.display?"block":"none"}async function saveLayout(){try{const t=grid.engine.nodes.map(t=>{const e=t.el,n=e.getAttribute("gs-id");if(n)return{id:n,type:"camera",x:t.x,y:t.y,w:t.w,h:t.h};{const n=e.querySelector(".grid-stack-item-content span")?.textContent,r=n?n.match(/\d+/)[0]:t.id;return{id:`empty-slot-${r}`,type:"empty",x:t.x,y:t.y,w:t.w,h:t.h}}}),e=await fetch("/save-layout",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').content},body:JSON.stringify({layout:t,gridConfig:{column:12,itemWidth:Math.floor(12/currentLayout.cols),maxRow:currentLayout.rows}})});if(!e.ok)throw Error(`HTTP error! status: ${e.status}`);const n=await e.json();console.log("Layout saved successfully:",n)}catch(t){console.error("Error saving layout:",t)}}document.addEventListener("DOMContentLoaded",async()=>{initializeGrid();try{const t=await fetch("/get-layout"),e=await t.json();if(e.gridConfig){const t=12/e.gridConfig.itemWidth,n=`2x${t}`;changeLayout(n)}}catch(t){console.error("Error loading layout:",t)}document.querySelectorAll("#layoutOptions .location-item").forEach(t=>{t.addEventListener("click",()=>{changeLayout(t.getAttribute("data-layout"))})})});