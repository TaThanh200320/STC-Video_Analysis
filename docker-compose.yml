version: "3"
services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
        environment:
            - "DB_HOST=mysql"
            - "REDIS_HOST=redis"
        networks:
            - app-network
        depends_on:
            - mysql
            - redis

    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./:/var/www
            - ./nginx/conf.d:/etc/nginx/conf.d
        networks:
            - app-network
        depends_on:
            - app

    mysql:
        image: mysql:8.0
        container_name: mysql
        restart: unless-stopped
        env_file:
            - .env
        environment:
            - MYSQL_DATABASE=$DB_DATABASE
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_PASSWORD=$DB_PASSWORD
            - MYSQL_USER=$DB_USERNAME
        ports:
            - "3306:3306"
        volumes:
            - mysql:/var/lib/mysql
        networks:
            - app-network

    admin:
        image: adminer
        restart: always
        depends_on:
            - mysql
        ports:
            - 8080:8080
        networks:
            - app-network

    redis:
        image: redis:latest
        container_name: redis
        restart: unless-stopped
        command: >
            --requirepass ${REDIS_PASSWORD}
        env_file:
            - .env
        environment:
            REDIS_PASSWORD: tathanh200320
        ports:
            - "6379:6379"
        volumes:
            - redis_volume_data:/data
        networks:
            - app-network

    redisinsight:
        image: redislabs/redisinsight:1.12.0
        restart: always
        ports:
            - "8001:8001"
        volumes:
            - redis_insight_volume_data:/db
        depends_on:
            - redis
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    mysql:
        driver: local
    redis_volume_data:
    redis_insight_volume_data:
